{"version":3,"sources":["logo.svg","components/TodoContext.jsx","customHooks/useLocalStorage.js","components/TodoCounter.jsx","components/TodoSearch.jsx","components/TodoList.jsx","components/TodoItem.jsx","components/CreateToDoButton.jsx","components/Modal.jsx","components/ToDoForm.jsx","AppUI.jsx","App.js","index.js"],"names":["TodoContext","React","createContext","ToDoProvider","props","itemName","initialValue","useState","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","toDos","saveToDos","searchToDo","setSearchToDo","openModal","setOpenModal","completedToDos","filter","todo","completed","length","totalToDos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeToDo","toDoIndex","findIndex","newToDos","deleteToDo","splice","addToDo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","e","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateToDoButton","Modal","ReactDOM","createPortal","document","getElementById","ToDoForm","newToDoValue","setNewToDoValue","onSubmit","preventDefault","action","htmlFor","name","id","cols","rows","type","AppUI","error","Fragment","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.5058da9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { useLocalStorage } from '../customHooks/useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction ToDoProvider(props) {\n    \n    const {item: toDos, saveItem: saveToDos, loading: loading} = useLocalStorage('TODOS_V1', []);\n  \n    const [searchToDo, setSearchToDo] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n\n    // Cuantos todos han sido completados\n    const completedToDos = toDos.filter(todo => !!todo.completed).length;\n    // Todos totales en el arreglo\n    const totalToDos = toDos.length;\n    \n    // Filtra los todos basados en el valor del input\n    let searchedTodos = [];\n    \n    if (!searchToDo.length >= 1){\n        searchedTodos = toDos;\n    } else {\n        searchedTodos = toDos.filter( todo => {\n        // comparativa de textos en minusculas\n        const todoText = todo.text.toLowerCase();\n        const searchText = searchToDo.toLowerCase();\n        return todoText.includes(searchText);\n        })\n    }\n    \n    \n    // Completar y eliminar toDo\n    const completeToDo = (text) => {\n        //Obtenido el index del texto, marco como completado\n        const toDoIndex = toDos.findIndex(todo => todo.text === text);\n        // Hago un re render creando una copia de mi arreglo toDos y actualizo el estado usando 'set..'\n        const newToDos = [...toDos];\n        newToDos[toDoIndex].completed = true;\n        saveToDos(newToDos);\n    }\n\n    const deleteToDo = (text) => {\n        //Obtenido el index del texto, marco como completado\n        const toDoIndex = toDos.findIndex(todo => todo.text === text);\n        // Hago un re render creando una copia de mi arreglo toDos y actualizo el estado usando 'set..'\n        const newToDos = [...toDos];\n        newToDos.splice(toDoIndex,1);\n        saveToDos(newToDos);\n    }\n\n    const addToDo = (text) => {\n        const newToDos = [...toDos];\n        newToDos.push({\n            completed: false,\n            text: text,\n        })\n        saveToDos(newToDos);\n    }\n  \n    return(\n        <TodoContext.Provider value={{\n            totalToDos,\n            completedToDos,\n            searchToDo,\n            setSearchToDo,\n            searchedTodos,\n            completeToDo,\n            deleteToDo,\n            addToDo,\n            loading,\n            openModal,\n            setOpenModal,\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport { TodoContext, ToDoProvider }","import React from 'react'\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [loading, setLoading] = React.useState(true)\n    const [item, setItem] = React.useState(initialValue);\n    \n    React.useEffect(()=>{\n        setTimeout(()=>{\n            const localStorageItem = localStorage.getItem(itemName);\n            let parsedItem;\n            \n            if(!localStorageItem) {\n                localStorage.setItem(itemName, JSON.stringify(initialValue));\n                parsedItem = initialValue;\n            } else {\n                // Convierte el string a un objeto js\n                parsedItem = JSON.parse(localStorageItem);\n            }\n\n            setItem(parsedItem);\n            setLoading(false);\n        }, 1000)\n    }, [])\n    \n    \n    const saveItem = (newItem) => {\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      }\n    // si son mas de dos elementos, React recomienda retornar un objeto y no un array  \n    return {item, saveItem, loading};\n}\n\nexport { useLocalStorage }\n","import React from 'react';\nimport { TodoContext } from './TodoContext';\nimport '../styles/TodoCounter.css'\n\nfunction TodoCounter() {\n    const { totalToDos, completedToDos } = React.useContext(TodoContext)\n    return (\n        <h2 className=\"title--status\">Has completado {completedToDos} de {totalToDos} todoS</h2>\n    )\n}\n\nexport { TodoCounter };\n","import React from 'react'\nimport '../styles/TodoSearch.css'\nimport { TodoContext } from './TodoContext';\n\nfunction TodoSearch() {\n\n    const { searchToDo, setSearchToDo } = React.useContext(TodoContext);\n\n    const onSearchValue = (e) => {\n        // console.log(e.target.value);\n        setSearchToDo(e.target.value);\n    }\n\n    return (\n        <input \n            className=\"input--search\" \n            placeholder=\"Busca alguna tarea\" \n            value={searchToDo}\n            onChange={onSearchValue}\n        />\n    )\n}\n\nexport { TodoSearch }\n","import React from 'react';\nimport '../styles/TodoList.css'\n\nfunction TodoList(props) {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList }\n","import React from 'react';\nimport '../styles/TodoItem.css';\n\nfunction TodoItem(props) {\n    \n    return (\n        <li className=\"TodoItem\">\n            <span \n              className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n              onClick={props.onComplete}\n            >\n                √\n            </span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p>\n            <span \n              className=\"Icon Icon-delete\"\n              onClick={props.onDelete}\n            >\n                x\n            </span>\n        </li>\n    )\n}\n\nexport { TodoItem }\n","import React from 'react';\nimport '../styles/CreateToDoButton.css'\nimport { TodoContext } from './TodoContext';\n\nfunction CreateToDoButton(props) {\n\n    const { openModal, setOpenModal} = React.useContext(TodoContext);\n\n    const onClickModal = () => {\n        setOpenModal(!openModal);\n    }\n\n    return (\n        <button \n            className={`button-ca ${openModal===false && 'button-ca'}`}\n            onClick={onClickModal}\n        >\n            +\n        </button>\n    )\n}\n\nexport { CreateToDoButton }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/Modal.css'\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    )\n}\n\nexport { Modal }","import React from 'react'\nimport { TodoContext } from './TodoContext';\nimport '../styles/ToDoForm.css'\n\nfunction ToDoForm() {\n    const [ newToDoValue, setNewToDoValue ] = React.useState('');\n    const { addToDo, setOpenModal } = React.useContext(TodoContext);\n\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n\n    const onChange = (e) => {\n        setNewToDoValue(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(newToDoValue.length <= 0)return;\n        addToDo(newToDoValue);\n        setOpenModal(false);\n    }\n\n    return (\n        <form action=\"\" onSubmit={onSubmit}>\n            <label htmlFor=\"\">Escribe tu nueva tarea</label>\n            <textarea \n            value={newToDoValue}\n            onChange={onChange}\n            name=\"\" id=\"\" cols=\"30\" rows=\"10\" \n            placeholder=\"Salir a caminar con Oliver\"></textarea>\n            <div className=\"TodoForm-buttonContainer\">\n                <button \n                    type=\"button\" \n                    onClick={onCancel}\n                    className=\"TodoForm-button TodoForm-button-cancel\" >\n                    Cancelar\n                </button>\n                <button \n                    type=\"submit\" \n                    onClick={onSubmit}\n                    className=\"TodoForm-button TodoForm-button-add\" >\n                    Añadir\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport { ToDoForm }\n","import React from 'react'\nimport { TodoContext } from './components/TodoContext';\nimport { TodoCounter } from \"./components/TodoCounter\";\nimport { TodoSearch } from \"./components/TodoSearch\";\nimport { TodoList } from \"./components/TodoList\";\nimport { TodoItem } from \"./components/TodoItem\";\nimport { CreateToDoButton } from \"./components/CreateToDoButton\";\nimport { Modal } from './components/Modal';\nimport { ToDoForm } from './components/ToDoForm';\nimport './styles/AppUI.css'\n\nfunction AppUI() {\n    const {error, loading, searchedTodos, completeToDo, deleteToDo, openModal,} = React.useContext(TodoContext);\n    return (\n    <React.Fragment>\n      <TodoCounter />\n\n      <TodoSearch />\n\n      <TodoList>\n          {error && <p className=\"message\">Ocurrio un error</p>}\n          {loading && <p className=\"message\">Estamos preparando todo</p>}\n          {(!loading && !searchedTodos.length) && <p className=\"message\">Da click al boton azul para crear tu primer tarea</p>}\n          \n          {searchedTodos.map(todo => (\n            <TodoItem\n              key={todo.text}\n              text={todo.text}\n              completed={todo.completed}\n              onComplete={() => completeToDo(todo.text)}\n              onDelete={() => deleteToDo(todo.text)}\n            />\n          ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <ToDoForm />\n        </Modal>\n      )}\n\n      <CreateToDoButton \n      />\n    </React.Fragment>\n\n    );\n}\n\nexport { AppUI }\n","import logo from \"./logo.svg\";\nimport React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { ToDoProvider } from \"./components/TodoContext\";\n\nfunction App() {\n\n  return (\n    <ToDoProvider>\n      <AppUI />\n    </ToDoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}